#msysgit是Windows版的Git，从http://msysgit.github.io/下载
#开始菜单里找到“Git”->“Git Bash”,设置
$ git config --global user.name "Your Name"
$ git config --global user.email "email@example.com"

#指定工作目录,并查看
$ cd e:/git/home
$ pwd

#创建文件夹,初始化仓库
$ mkdir learngit
$ git init

#查看目录下文件，添加文件到仓库,提交给Git
$ ls
$ git add note.txt
$ git commit -m "how to use git"

#查看仓库当前状态,查看被修改该文件有哪些不同
#没有add的文件与已经add过的文件

$ git status
$ git diff note.txt

#查看提交过的修改版本,--pretty = oneline缩减显示
$ git log
$ git log --pretty = oneline

#查看历次提交版本命令，回到历史版本
$ git reflog
$ git reset --hard 3e84506

#Git 管理的是修改，即add前和add后，工作区和暂存区的区别
#commit只负责提交暂存区内容

# 查看工作区和版本库最新版区别
$ git diff HEAD -- note.txt

#1、工作区版本撤销；
$ git checkout -- note.txt
#2、暂存区撤销；
$ git reset HEAD note.txt
#3、提交后撤销,即回到历史版本

#删除文件,恢复误删文件
$ rm test.txt
$ git checkout -- test.txt
#git checkout是用版本库里的版本替换工作区的版本

#创建SSH Key，与Github加密传输文件
$ ssh-keygen -t rsa -C"526532437@qq.com"
# 一直回车，然后到根目录找.ssh目录，里面有id_rsa（私钥）和id_rsa.pub（公钥）
$ ~cd
$ ls -a
#在Github的“Add SSH Key”中，添加id_rsa.pub（公钥）

#git仓库与github仓库关联
$ git remote set url origin git@github.com:songwill/my-git-note.git
$ git remote add origin git@github.com:songwill/my-git-note.git

#推送本地库到远程库
$ git push -u origin master

#克隆Github上的库,可以用SSH协议(快)或者https（通用）
$ git clone git@github.com;songwill/my-git-note.git
$ git clone https://github.com/songwill/my-git-note.git
$ cd my-git-note

#查看分支（带*为当前分支）
$ git branch
#创建、切换分支
$ git branch dev
$ git checkout dev
#上面两句可合并为
$ git checkout -b dev

#在分支上，提交修改文件
$ git add note.txt
$ git commit -m"branch test"

#切换回master主分支,合并分支上的修改,合并完后删除
$ git checkout master
$ git merge dev
$ git branch -d dev
$ git master

#不同分支（新分支和 master分支）内容都做改动时，合并时会出现冲突
#用cat note.txt查看冲突的文件，改动后，再次提交进行合并
#查看合并情况
$ git log --graph --pretty=oneline --abbrev-commit

#分支合并方式，不用fast forward，而用--no-ff的普通合并，可以产看合并过程
$ git merge --no-ff -m"merge with --no-ff" dev
#本次合并要创建一个新的commit，所以加上-m参数，把commit描述写

#bug分支，暂停当下分支（保存到某个地方），去做其他分支，做完再回来
$ git stash
$ git stash list
#会到暂停前分支状态，并删除分支的保存
$ git stash pop




